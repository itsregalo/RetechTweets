{"version":3,"sources":["logo.svg","tweets/components.js","db_lookup/components.js","App.js","reportWebVitals.js","index.js"],"names":["TweetsComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newVal","current","value","tempTweets","unshift","content","likes","id","console","log","ref","required","type","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","finalTweetList","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reactRoot","document","getElementById","retechTweets","ReactDOM","render","StrictMode"],"mappings":"2MAAe,G,MAAA,IAA0B,kC,sBCKlC,SAASA,EAAgBC,GAE9B,IAAMC,EAAcC,IAAMC,YAFU,EAGFC,mBAAS,IAHP,mBAG7BC,EAH6B,KAGlBC,EAHkB,KAkBpC,OAAO,sBAAKC,UAAWP,EAAMO,UAAtB,UACH,qBAAKA,UAAU,cAAf,SACE,uBAAMC,SAhBS,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAASV,EAAYW,QAAQC,MAC/BC,EAAU,YAAOT,GACrBS,EAAWC,QAAQ,CACjBC,QAAQL,EACRM,MAAM,EACNC,GAAG,MAELZ,EAAaQ,GACbK,QAAQC,IAAIT,GACZV,EAAYW,QAAQC,MAAQ,IAKxB,UACA,0BAAUQ,IAAKpB,EAAaqB,UAAY,EAAMf,UAAU,iBAGxD,wBAAQgB,KAAK,SAAShB,UAAU,uBAAhC,wBAGJ,cAACiB,EAAD,CAAWnB,UAAWA,OAKjB,SAASmB,EAAUxB,GAAO,IAAD,EACMI,mBAAS,IADf,mBACvBqB,EADuB,KACXC,EADW,OAEFtB,mBAAS,IAFP,mBAEvBuB,EAFuB,KAEfC,EAFe,KAwB9B,OApBAC,qBAAU,WACR,IAAMC,EAAiB,YAAI9B,EAAMK,WAAW0B,OAAON,GAE/CK,EAAeE,SAAWL,EAAOK,QACnCJ,EAAUE,KAEX,CAAC9B,EAAMK,UAAWsB,EAAQF,IAE7BI,qBAAW,YChDR,SAAoBI,GACvB,IAAMC,EAAM,IAAIC,eAKhBD,EAAIE,aAFiB,OAGrBF,EAAIG,KALW,MACH,iCAKZH,EAAII,OAAS,WACVL,EAASC,EAAIK,SAAUL,EAAIM,SAE9BN,EAAIO,QAAU,SAAUC,GACtBT,EAAS,CAAC,QAAU,mCAGtBC,EAAIS,OD0CFC,EAPmB,SAACL,EAAUC,GACb,MAAXA,EACFd,EAAca,GAEdM,MAAM,2BAKV,IACKlB,EAAOmB,KAAI,SAACC,EAAMC,GACvB,OAAO,cAACC,EAAD,CAAOC,MAAOH,EAAMxC,UAAU,uCAA9B,UAA4EyC,EAA5E,kBAIN,SAASG,EAAUnD,GAAO,IACtBkD,EAAiBlD,EAAjBkD,MAAOE,EAAUpD,EAAVoD,OADc,EAGFhD,mBAAS8C,EAAMjC,MAAQiC,EAAMjC,MAAM,GAHjC,mBAGrBA,EAHqB,KAGdoC,EAHc,OAIIjD,oBAAS,GAJb,mBAIrBkD,EAJqB,KAIXC,EAJW,KAMtBhD,EAAYP,EAAMO,UAAYP,EAAMO,UAAW,yBAE/CiD,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAalDA,EAA0B,SAAhBL,EAAO7B,KAAP,UAA4BN,EAA5B,YAAqCuC,GAAkBA,EACvE,OAAO,wBAAQjD,UAAaA,EAAWmD,QAbnB,SAACjD,GACnBA,EAAMC,iBACc,SAAhB0C,EAAO7B,QACQ,IAAb+B,GACFD,EAASpC,EAAQ,GACjBsC,GAAY,KAEZF,EAASpC,EAAQ,GACjBsC,GAAY,MAKX,SAAuDE,IAG3D,SAASR,EAAMjD,GAAQ,IAEnBkD,EAASlD,EAATkD,MACD3C,EAAYP,EAAMO,UAAYP,EAAMO,UAAY,2BAEtD,OAAO,sBAAKA,UAAWA,EAAhB,UACL,8BAAI2C,EAAMhC,GAAV,MAAiBgC,EAAMlC,WACvB,sBAAKT,UAAU,gBAAf,UACE,cAAC4C,EAAD,CAAWD,MAAOA,EAAOE,OAAQ,CAAC7B,KAAM,OAAQkC,QAAS,WACzD,cAACN,EAAD,CAAWD,MAAOA,EAAOE,OAAQ,CAAC7B,KAAM,SAAUkC,QAAS,YAC3D,cAACN,EAAD,CAAWD,MAAOA,EAAOE,OAAQ,CAAC7B,KAAM,UAAWkC,QAAS,mBE/DrDE,MA5Bf,WAGE,OACE,qBAAKpD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKqD,IAAKC,EAAMtD,UAAU,WAAWuD,IAAI,SACzC,sCACO,8CADP,0BAGA,8BACE,cAAC/D,EAAD,MAIF,mBACEQ,UAAU,WACVwD,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCbOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAYC,SAASC,eAAe,QACpCC,EAAeF,SAASC,eAAe,iBAEzCF,GACFI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,GAIAG,GACFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClF,EAAD,MAEF+E,GAOJZ,M","file":"static/js/main.b939b473.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react'\n\nimport {loadTweets} from '../db_lookup'\n\n\nexport function TweetsComponent(props){\n\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    let tempTweets = [...newTweets]\n    tempTweets.unshift({\n      content:newVal,\n      likes:0,\n      id:808,\n    })\n    setNewTweets(tempTweets)\n    console.log(newVal)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n      <div className='col-12 mb-3'>\n        <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required = {true} className='form-control'>\n\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n      </form>\n    </div>\n    <TweetList newTweets={newTweets}/>\n  </div>\n}\n\n  \n  export function TweetList(props){\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n  \n    useEffect(() => {\n      const finalTweetList = [...props.newTweets].concat(tweetsInit)\n\n      if (finalTweetList.length !== tweets.length){\n        setTweets(finalTweetList)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect (() => {\n  \n      const myCallback = (response, status) => {\n        if (status === 200){\n          setTweetsInit(response)\n        }else{\n          alert(\"There was an error\")\n        }\n      }\n      loadTweets(myCallback)\n      \n    },[])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} className=\"my-5 py-5 border bg-white text-dark\" key={`${index}-{item.id}`}/>\n    })\n  }\n\nexport function ActionBtn(props){\n    const {tweet, action} = props\n\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes:0)\n    const [userLike, setUserLike] = useState(false)\n \n    const className = props.className ? props.className :'btn btn-primary btn-sm'\n  \n    const actionDisplay = action.display ? action.display : \"Action\"\n    const handleClick = (event) => {\n      event.preventDefault()\n      if (action.type === 'like'){\n        if (userLike === true){\n          setLikes(likes - 1)\n          setUserLike(false)\n        }else{\n          setLikes(likes + 1)\n          setUserLike(true)\n        }\n      }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className = {className} onClick={handleClick}>{display}</button>\n  }\n  \nexport function Tweet(props) {\n  \n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 max-auto col-md-6'\n  \n    return <div className={className}>\n      <p>{tweet.id} - {tweet.content}</p>\n      <div className='btn btn-group'>\n        <ActionBtn tweet={tweet} action={{type: \"like\", display: \"Likes\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"unlike\", display: \"Unlike\"}} />\n        <ActionBtn tweet={tweet} action={{type: \"retweet\", display: \"Retweet\"}} />\n      </div>\n    </div>\n  }","\nexport function loadTweets(callback){\n    const xhr = new XMLHttpRequest()\n    const method = 'GET'\n    const url = 'http://127.0.0.1:8000/tweets/'\n    const responseType = 'json'\n  \n    xhr.responseType = responseType\n    xhr.open(method, url)\n    xhr.onload = function() {\n       callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e){\n      callback({\"message\":\"The request prompted an error\"})\n    }\n    \n    xhr.send()\n  }","import React from 'react' //use effect os for reading the backend\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\n\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\n\n\nconst reactRoot = document.getElementById('root')\nconst retechTweets = document.getElementById('retech-tweets')\n\nif (reactRoot){\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    reactRoot\n  );  \n}\n\nif (retechTweets){\n  ReactDOM.render(\n    <React.StrictMode>\n      <TweetsComponent />\n    </React.StrictMode>,\n    retechTweets\n  );  \n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}